#!/usr/bin/env bash

###################################################################################################
# Returns sockets in 'ESTABLISHED' state formated as JSON.
# Returned sockets will match either a process name or a process ID.
#
# * BACKEND: [ss](https://man7.org/linux/man-pages/man8/ss.8.html)
#
# * PARAMETERS:
#   1. process name | Required<String>
#   2. process id   | Required<Integer>
#   3. socket state | OneOf<ESTAB|LISTEN|TIME_WAIT|CLOSE_WAIT|CLOSED> | default: ESTAB
# 
# * RETURNS:
#   - JSON lines: objects separated by line breaks
#   - JSON structure:  
#     {
#       f: <String> | Protocol: tcp or tcp6
#       l: <String> | LocalAddress: IP+TCP 2-tuple separated by ':'
#       r: <String> | RemoteAddress: IP+TCP 2-tuple separated by ':'
#       p: <String> | Program: process name
#       i: <String> | ProcessID: process ID aka 'pid'
#     }
###################################################################################################

ss -tulpanHO 2>/dev/null | grep -iE '^tcp.*' \
  | gawk '{ \
    match($7, /.*:\((\("[^"]+",pid=[0-9]+,fd=[0-9]+\),?)+\)/, p); \
    split(substr(p[0], 9, length(p[0])-10), p, "\\),\\("); \
    for (i in p) { \
      split(p[i], px, ","); \
      split(px[2], pid, "="); \
      split(px[3], fd, "="); \
      printf("{\"f\":\"%s\",\"l\":\"%s\",\"r\":\"%s\",\"s\":\"%s\",\"p\":%s,\"i\":%d,\"d\":%d}\n",$1,$5,$6,$2,px[1],pid[2],fd[2]); \
    } \
  }' \
  | jq -cMr "select ((.s == \"${3:-ESTAB}\") and ((.p == \"${1}\") or (.i == ${2}))) | del (.s)"
