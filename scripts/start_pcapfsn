#!/usr/bin/env bash

set +x

while : ; do
    [[ -d ${PCAP_DIR} ]] \
        && echo "{\"severity\":\"INFO\",\"message\":\"PCAP files directory is now available at: ${PCAP_DIR}\",\"sidecar\":\"${APP_SIDECAR}\",\"module\":\"${PROC_NAME}\"}" \
        && break
    echo "{\"severity\":\"WARNING\",\"message\":\"Waiting for PCAP files directory to be available at: ${PCAP_DIR} ...\",\"sidecar\":\"${APP_SIDECAR}\",\"module\":\"${PROC_NAME}\"}"
    sleep 1
done

if [[ "$PCAP_JSONDUMP" == true ]]; then
    PCAP_EXT="${PCAP_EXT},json"
fi

if [[ "${PCAP_RT_ENV}" == "cloud_run_gen1" ]]; then
    unset PCAP_COMPAT
    export PCAP_COMPAT='true'
fi


if [[ "${PCAP_TCPDUMP}" == true || "${PCAP_JSONDUMP}" == true ]]; then
    set -x

    ls -l "${PCAP_DIR}"

    # `exec` allows `/bin/pcap_fsn` to receive signals directly
    exec env /bin/pcap_fsn \
        -debug="${PCAP_DEBUG:-false}" \
        -env="${PCAP_EXEC_ENV:-run}" \
        -run=${PCAP_RUN:-true} \
        -gae=${PCAP_GAE:-false} \
        -gke=${PCAP_GKE:-false} \
        -src_dir=${PCAP_TMP} \
        -gcs_dir=${PCAP_DIR} \
        -pcap_ext="${PCAP_EXT}" \
        -gzip="${PCAP_GZIP:-true}" \
        -interval="${PCAP_SECS:-60}" \
        -retries_max="${PCAP_FSN_RETRIES_MAX:-6}" \
        -retries_delay="${PCAP_FSN_RETRIES_DELAY:-2}" \
        -compat="${PCAP_COMPAT:-false}" \
        -rt_env="${PCAP_RT_ENV:-cloud_run_gen2}"
else
    echo "{\"severity\":\"NOTICE\",\"message\":\"not exporting PCAP files to GCS\",\"sidecar\":\"${APP_SIDECAR}\",\"module\":\"${PROC_NAME}\"}"
    exec sleep infinity
fi
