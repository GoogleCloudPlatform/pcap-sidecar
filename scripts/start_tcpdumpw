#!/usr/bin/env bash

set +x

while : ; do
    pcapfsn_ready=$(ps -efa | grep --color=never '/pcap_fsn' | grep --color=never -v grep | wc -l  | tr -d '\n')
    [[ "${pcapfsn_ready}" == '1' ]] && break
    echo "{\"severity\":\"WARNING\",\"message\":\"PCAP FS notifier is not running\",\"sidecar\":\"${APP_SIDECAR}\",\"module\":\"${PROC_NAME}\"}"
    sleep 1
done

EPHEMERAL_PORT_RANGE=`cat /proc/sys/net/ipv4/ip_local_port_range | tr '\t' ',' | tr -d '\n'`

export PCAP_IFACE_SAFE="${PCAP_IFACE:-eth}"
if [[ "${PCAP_RT_ENV}" == "cloud_run_gen1" ]]; then
    unset PCAP_IFACE_SAFE
    export PCAP_IFACE_SAFE='any'
fi

ls -l /bin/tcpdump
ls -l /bin/tcpdumpw

set -x

# `exec` allows `/bin/tcpdumpw` to receive signals directly
exec env /bin/tcpdumpw \
    -gae=${PCAP_GAE} \
    -iface="${PCAP_IFACE_SAFE}" \
    -use_cron=${PCAP_USE_CRON:-false} \
    -cron_exp="${PCAP_CRON_EXP:--}" \
    -timezone="${PCAP_TZ:-UTC}" \
    -timeout=${PCAP_TO:-0} \
    -interval=${PCAP_SECS} \
    -directory=${PCAP_TMP:-/pcap-tmp} \
    -extension=${PCAP_EXT:-pcap} \
    -tcpdump=${PCAP_TCPDUMP:-true} \
    -jsondump=${PCAP_JSONDUMP:-false} \
    -jsonlog=${PCAP_JSONDUMP_LOG:-false} \
    -ordered=${PCAP_ORDERED:-false} \
    -conntrack=${PCAP_CONNTRACK:-false} \
    -snaplen=${PCAP_SNAPLEN:-65536} \
    -hc_port="${PCAP_HC_PORT:-12345}" \
    -filter="${PCAP_FILTER:-DISABLED}" \
    -l3_protos="${PCAP_L3_PROTOS:-ipv4,ipv6}" \
    -l4_protos="${PCAP_L4_PROTOS:-tcp,udp}" \
    -ipv4="${PCAP_IPV4:-ALL}" \
    -ipv6="${PCAP_IPV6:-ALL}" \
    -hosts="${PCAP_HOSTS:-ALL}" \
    -ports="${PCAP_PORTS:-ALL}" \
    -tcp_flags="${PCAP_TCP_FLAGS:-ANY}" \
    -ephemerals="${EPHEMERAL_PORT_RANGE:-32768,65535}"
