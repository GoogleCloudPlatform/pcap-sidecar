#!/usr/bin/env bash

set +x

export PCAP_GAE="${PCAP_GAE:-false}"

while : ; do
    [[ -d ${PCAP_DIR} ]] \
        && echo "{\"severity\":\"INFO\",\"message\":\"PCAP files directory is now available at: ${PCAP_DIR}\",\"sidecar\":\"${APP_SIDECAR}\",\"module\":\"${PROC_NAME}\"}" \
        && break
    echo "{\"severity\":\"WARNING\",\"message\":\"Waiting for PCAP files directory to be available at: ${PCAP_DIR} ...\",\"sidecar\":\"${APP_SIDECAR}\",\"module\":\"${PROC_NAME}\"}"
    sleep 1
done

if [ "$PCAP_JSONDUMP" = true ] ; then
    PCAP_EXT="${PCAP_EXT},json"
fi

if [[ "${PCAP_RT_ENV}" == "cloud_run_gen1" ]]; then
    unset PCAP_COMPAT
    export PCAP_COMPAT='true'
fi

ls -l /bin/pcap_fsn

set -x

ls -l "${PCAP_DIR}"

# `exec` allows `/bin/pcap_fsn` to receive signals directly
exec env /bin/pcap_fsn \
    -src_dir=${PCAP_TMP} \
    -gcs_dir=${PCAP_DIR} \
    -pcap_ext="${PCAP_EXT}" \
    -gzip="${PCAP_GZIP:-true}" \
    -interval="${PCAP_SECS:-60}" \
    -gae=${PCAP_GAE} \
    -retries_max="${PCAP_FSN_RETRIES_MAX:-6}" \
    -retries_delay="${PCAP_FSN_RETRIES_DELAY:-2}" \
    -compat="${PCAP_COMPAT:-false}" \
    -rt_env="${PCAP_RT_ENV:-cloud_run_gen2}"
