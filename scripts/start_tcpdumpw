#!/usr/bin/env bash

while : ; do
    pcapfsn_ready=$(ps -efa | grep --color=never '/pcap_fsn' | grep --color=never -v grep | wc -l  | tr -d '\n')
    [[ "${pcapfsn_ready}" == '1' ]] && break
    echo "{\"severity\":\"WARNING\",\"message\":\"PCAP FS notifier is not running\",\"sidecar\":\"${APP_SIDECAR}\",\"module\":\"${PROC_NAME}\"}"
    sleep 1
done

set -x

# `exec` allows `/bin/tcpdumpw` to receive signals directly
exec env /bin/tcpdumpw \
    -gae=${PCAP_GAE} \
    -iface="${PCAP_IFACE:-eth}" \
    -use_cron=${PCAP_USE_CRON:-false} \
    -cron_exp="${PCAP_CRON_EXP:--}" \
    -timezone="${PCAP_TZ:-UTC}" \
    -timeout=${PCAP_TO:-0} \
    -interval=${PCAP_SECS} \
    -directory=${PCAP_TMP:-/pcap-tmp} \
    -extension=${PCAP_EXT:-pcap} \
    -tcpdump=${PCAP_TCPDUMP:-true} \
    -jsondump=${PCAP_JSONDUMP:-false} \
    -jsonlog=${PCAP_JSONDUMP_LOG:-false} \
    -ordered=${PCAP_ORDERED:-false} \
    -conntrack=${PCAP_CONNTRACK:-false} \
    -snaplen=${PCAP_SNAPLEN:-0} \
    -filter="${PCAP_FILTER}" \
    -hc_port="${PCAP_HC_PORT:-12345}"
