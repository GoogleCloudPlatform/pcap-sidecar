#!/usr/bin/env bash

set +x

while : ; do
    [[ -d ${PCAP_DIR} ]] && break
    echo "{\"severity\":\"WARNING\",\"message\":\"PCAP files directory is not available: ${PCAP_DIR}\",\"sidecar\":\"${APP_SIDECAR}\",\"module\":\"${PROC_NAME}\"}"
    sleep 1
done

if [ "$PCAP_JSONDUMP" = true ] ; then
    PCAP_EXT="${PCAP_EXT},json"
fi

if [[ "${PCAP_RT_ENV}" == "cloud_run_gen1" ]]; then
    unset PCAP_COMPAT
    export PCAP_COMPAT='true'
fi

set -x

ls -l "${PCAP_DIR}"
ls -l /bin/pcap_fsn

# `exec` allows `/bin/pcap_fsn` to receive signals directly
exec env /bin/pcap_fsn \
    -src_dir=${PCAP_TMP} \
    -gcs_dir=${PCAP_DIR} \
    -pcap_ext="${PCAP_EXT}" \
    -gzip=${PCAP_GZIP} \
    -interval=${PCAP_SECS:-60} \
    -gae=${PCAP_GAE} \
    -rt_env="${PCAP_RT_ENV:-cloud_run_gen2}" \
    -compat="${PCAP_COMPAT:-false}"
